@font-face {
  src: url('../fonts/Tektur.ttf');
  font-family: 'Tektur';
}

:root {
  --hue: 148;
  --saturation: 34%;
  --highlightHue: calc(var(--hue) + 180);
  --highlightSaturation: calc(var(--saturation) + 30%);
  --mainLuminosity: 61%;
  --oppositeLuminosity: 17%;
  --puckLuminosity: 100%;
  --appBackground: hsl(var(--hue), var(--saturation), var(--mainLuminosity));
  --appBackgroundSemiTransparent: hsla(var(--hue), var(--saturation), var(--mainLuminosity), .4);
  --appForeground: hsl(var(--hue), var(--saturation), var(--oppositeLuminosity));
  --appForegroundSemiTransparent: hsl(var(--hue), var(--saturation), var(--oppositeLuminosity), .2);
  --appForegroundDark: hsl(var(--hue), var(--saturation), calc(var(--oppositeLuminosity) / 1.5));
  --appForegroundHighlight: hsl(var(--hue), 60%, 80%);
  --appForegroundDisabled: hsla(var(--hue), var(--saturation), var(--oppositeLuminosity), 0.5);
  --highlightColor: hsla(var(--highlightHue), var(--highlightSaturation), 76%, 1);
  --targetX: 50%;
  --funfont: 'Tektur';
  /* prettier-ignore */
  --mainFont: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  --defaultGap: 20px;
  --bigGap: calc(2 * var(--defaultGap));
  --hugeGap: calc(4 * var(--defaultGap));
  --stageWidth: 500px;
  --stageHeight: 500px;
  --maxWidth: 500px;
  --minWidth: 340px;
  --maxHeight: 956px;
  --dividerColor: hsl(var(--hue), var(--saturation), 66%);
  --whiteTextShadow: 1px 1px 0px hsl(var(--highlightHue), 30%, 50%);
  --shadow: 2px 2px 0px hsla(var(--hue), var(--saturation), var(--oppositeLuminosity), 0.1);
  --shadowAlt: 2px 2px 0px hsla(var(--hue), var(--saturation), var(--oppositeLuminosity), 0.025);
}

html,
body {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin: 0px;
  background: repeating-linear-gradient(90deg, hsl(var(--hue), var(--saturation), var(--oppositeLuminosity)) 0px, hsl(var(--hue), var(--saturation), var(--oppositeLuminosity)) var(--bigGap), hsl(var(--hue), var(--saturation), calc(var(--oppositeLuminosity) - 1%)) var(--bigGap), hsl(var(--hue), var(--saturation), calc(var(--oppositeLuminosity) - 1%)) var(--hugeGap));
  padding: 0px;
  width: 100%;
  height: 100%;
  overflow: hidden;
  color: var(--appForeground);
  font-family: var(--mainFont);
  user-select: none;
  text-transform: lowercase;
  -webkit-user-select: none;
  text-shadow: var(--shadow);
}

[v-cloak] {
  opacity: 0;
  transition: 250ms ease-out opacity;
}

app {
  display: flex;
  position: relative;
  justify-content: center;
  align-items: start;
  border-top: 1px solid var(--appForeground);
  width: 100%;
  min-width: var(--minWidth);
  max-width: var(--maxWidth);
  height: 100%;
  max-height: var(--maxHeight);
  overflow: hidden;
}

a {
  color: var(--appForeground);
}

h1,
h2,
h3,
h4 {
  margin-top: var(--defaultGap);
  margin-bottom: var(--defaultGap);
  padding-top: 0px;
  line-height: 100%;
  font-family: var(--funfont);
  text-align: center;
  text-shadow: var(--shadowAlt);
  text-transform: lowercase;
}

h1 {
  margin: 0;
  font-size: 2.75em;
}

subtitle {
  display: block;
  margin-top: 0;
  padding: 0 var(--defaultGap);
  font-weight: normal;
  line-height: 1.5em;
  font-family: var(--mainFont);
  text-shadow: var(--shadow);
}

pretitle {
  display: block;
  font-weight: normal;
  font-size: 0.3em;
  font-family: var(--mainFont);
  text-transform: capitalize;
}

h1 subtitle {
  font-size: 0.4em;
  text-shadow: var(--shadow);
}

h2 subtitle {
  font-size: 0.6em;
  text-shadow: var(--shadow);
}

h3 subtitle {
  font-size: 0.8em;
  text-shadow: var(--shadow);
}

h1 pretitle {
  font-size: 0.3em;
  text-shadow: var(--shadow);
}

h2 pretitle {
  font-size: 0.4em;
  text-shadow: var(--shadow);
}

h3 pretitle {
  font-size: 0.8em;
  text-shadow: var(--shadow);
}

h2 {
  margin: 0;
  padding-bottom: var(--defaultGap);
  font-size: 1.5em;
}

h3 {
  cursor: pointer;
  margin-top: 0;
  font-weight: normal;
  text-align: center;
  text-shadow: var(--shadow);
}

button {
  user-select: none;
  -webkit-user-select: none;
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;
}

theater,
modal,
overlay {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 0px;
  transition: 400ms cubic-bezier(0.4, 0, 0.6, 1) transform, opacity;
  margin: 0px auto;
  background: var(--appBackground);
  width: 100%;
  min-width: var(--minWidth);
  max-width: var(--maxWidth);
  height: calc(100%);
  max-height: var(--maxHeight);
}

.left {
  transform: translate(-100%, 0px);
}

.right {
  transform: translate(100%, 0px);
}

.down {
  transform: translate(0px, 100%);
}

.up {
  transform: translate(0px, -100%);
}


theater {
  justify-content: start;
  gap: 10px;
  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.25);
}

theater header button.hide {
  opacity: 0;
  pointer-events: none;
}

.lock theater {
  background: var(--appBackground);
}

.ended theater info,
.success theater info {
  transform: translateY(-40px);
}

theater header score {
  display: block;
  position: relative;
  margin-top: 0px;
  padding-top: 3px;
  font-weight: bold;
  font-size: 1.38em;
  text-shadow: var(--shadowAlt);
}

theater controls {
  position: absolute;
  bottom: unset;
  align-items: flex-end;
  transition: 100ms ease-in-out opacity;
  margin: 0;
  height: calc(100% - var(--bigGap));
  max-height: calc(var(--maxHeight) - var(--defaultGap) - 0.5 * env(safe-area-inset-bottom));
  pointer-events: none;
}

.keyboard.dropping theater controls {
  opacity: 1;
}

.dropping theater controls {
  opacity: 0;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

header button {
  display: flex;
  justify-content: start;
  align-items: center;
  cursor: pointer;
  outline: none;
  box-shadow: none;
  border: none;
  background: none;
  padding: 12px 18px 14px 18px;
  width: 124px;
  min-width: 124px;
  max-width: 124px;
  height: 100%;
  color: var(--appForeground);
  font-weight: normal;
  font-size: 1.35em;
  font-family: var(--funfont);
  text-shadow: var(--shadow);
}

header score {
  font-size: 1em;
}

header button:nth-child(2),
header button:nth-child(3) {
  justify-content: end;
}

header.hide {
  opacity: 0;
  pointer-events: none;
}

stage {
  display: block;
  transform-origin: top;
  margin-bottom: env(safe-area-inset-bottom);
  border: 0px solid var(--appForeground);
  background: var(--appBackground);
  width: var(--stageWidth);
  height: var(--stageHeight);
  min-height: var(--stageHeight);
  /* border-bottom: 1px solid var(--appForeground); */
  /* border-width: 1px 0px; */
  max-height: var(--stageHeight);
}

.lock stage {
  background: var(--appBackground);
}

version {
  display: block;
  opacity: 0.8;
  margin-top: var(--bigGap);
  margin-bottom: var(--defaultGap);
  font-size: 0.7em;
  text-transform: initial;
}

version a {
  font-weight: bold;
  text-decoration: none;
}

logo {
  mask-image: url(../*images/big_tent_logo.svg);
  width: 100%;
  height: 100px;
  -webkit-mask-image: url(../images/big_tent_logo.svg);
  mask-position: center;
  mask-size: 290px;
  mask-repeat: no-repeat;
  background: var(--appForeground);
  max-width: 500px;
  -webkit-mask-size: 120px;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: center;
}

score {
  display: block;
  width: 100%;
  pointer-events: none;
  font-size: 1.35em;
  line-height: 100%;
  font-family: var(--funfont);
  text-align: center;
}

stats {
  display: flex;
  flex-direction: column;
  align-content: center;
  align-items: center;
  width: 100%;
  max-width: 300px;
  user-select: text;
  -webkit-user-select: text;
  cursor: pointer;
  padding-top: 30px;
  padding-bottom: 30px;
}

stats grade {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--defaultGap);
  margin-bottom: var(--bigGap);
  color: hsl(var(--hue), var(--saturation), 100%);
  font-weight: bold;
  font-size: 3em;
  line-height: 1em;
  font-family: var(--funfont);
  text-align: center;
}

stats h1 {
  margin: var(--defaultGap) 0;
}

stats h3 {
  margin: var(--defaultGap) 0 0;
}

stat {
  display: flex;
  justify-content: space-between;
  align-items: end;
  width: 100%;
  line-height: 1.5em;
  text-transform: lowercase;
}

stats stat.emphasize {
  margin-bottom: 9px;
  border-bottom: 1px solid var(--appForeground);
  padding-bottom: 7px;
}

stat span {
  float: right;
  /* line-height: 1em; */
}

stats stat.emphasize span {
  /* font-family: var(--funfont); */
  /* text-shadow: var(--shadowAlt); */
  font-weight: bold;
}

puck {
  display: flex;
  position: fixed;
  justify-content: start;
  align-items: center;
  opacity: 0;
  z-index: 1;
  border: 1px hsl(var(--hue), var(--saturation), calc(100% - var(--puckLuminosity))) solid;
  border-radius: 33%;
  background-color: hsl(var(--hue), var(--saturation), var(--puckLuminosity));
  height: 10px;
}

puck.show {
  opacity: 1;
}

theater puck.start::after {
  display: block;
  position: absolute;
  transform: translateX(30px);
  content: '‚Üê the puck';
  font-weight: bold;
  font-family: var(--funfont);
  text-shadow: var(--shadowAlt);
  white-space: nowrap;
}

.ended theater puck {
  border-color: hsla(var(--hue), var(--saturation), var(--oppositeLuminosity), 0.6);
}

puck tail {
  display: block;
  position: absolute;
  transform: scaleY(0);
  transform-origin: center bottom;
  transition: 50ms ease-in-out all;
  margin-top: -52px;
  background: linear-gradient(hsla(0, 0%, var(--puckLuminosity), 0), hsla(0, 0%, var(--puckLuminosity), 0.5));
  width: 100%;
  height: 60px;
}

modal puck,
.dropping puck,
.stopped puck {
  opacity: 1;
}

.dropping puck tail {
  transform: scaleY(1);
}

.stopped puck {
  transition: 0ms linear all;
}

.stopped puck.disabled,
puck.disabled {
  opacity: 0.3;
  border-width: 0px;
}

.stopped puck tail {
  transform: scaleY(0);
}

modal,
overlay {
  position: absolute;
  row-gap: 0px;
  flex-direction: column;
  align-content: start;
  justify-content: space-between;
  align-items: center;
  transform: translateY(100%);
  z-index: 1000;
  background: var(--appBackground);
  padding: 0;
  overflow-y: auto;
}

overlay {
  box-shadow: none;
}

stretch {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 100%;
}

modal.center {
  justify-content: center;
}

modal.center controls {
  width: 100%;
}

modal.show,
overlay.show {
  /* display: flex; */
  transform: translate(0px, 0px);
  transition: 300ms cubic-bezier(0.165, 0.84, 0.44, 1) transform, opacity;
  /* opacity: 1; */
  /* pointer-events: all; */
}

modal ohno {
  display: none;
}

welcome {
  display: block;
  cursor: pointer;
  border: 1px solid white;
  /* border-radius: 5px; */
  background-color: hsl(var(--highlightHue), 30%, 60%);
  padding: 8px 16px;
  color: white;
  text-shadow: var(--whiteTextShadow);

}

overlay {
  justify-content: center;
  align-items: center;
  transform: none;
  opacity: 1;
  background: none;
}

section {
  display: flex;
  flex-direction: column;
  align-content: center;
  justify-content: center;
  align-items: center;
  gap: var(--defaultGap);
  padding: var(--defaultGap) var(--bigGap);
  width: calc(100% - var(--hugeGap));
}

leftright {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: calc(0.5 * var(--defaultGap));
  margin: 0px;
  padding: 0px;
  width: calc(100%);
}

leftright:first-of-type {
  margin-top: var(--bigGap);
}

campaigns,
sets {
  display: flex;
  flex-direction: column;
  gap: 10px;
  width: 100%;
}


campaign,
set {
  display: flex;
  flex-direction: column;
  align-content: center;
  justify-content: start;
  align-items: start;
  gap: 2px;
  cursor: pointer;
  box-shadow: var(--shadow), inset var(--shadow);
  border: 1px solid var(--appForeground);
  background: var(--appForeground);
  padding: 14px var(--defaultGap) 10px;
  width: calc(100% - var(--bigGap));
  color: hsl(var(--hue), 80%, 100%);
  text-shadow: var(--shadow);
}

campaign.finished,
set.finished,
campaign.passed,
set.passed,
campaign.locked,
campaign.dirty,
set.locked,
set.dirty {
  opacity: 1;
  box-shadow: none;
  border: none;
  background: none;
  pointer-events: none;
  color: var(--appForeground);
  font-style: italic;
}

campaign.finished.passed,
set.finished.passed {
  /* background: var(--highlightColor); */
  font-style: unset
}


campaign.locked,
set.locked {
  opacity: 1;
  box-shadow: none;
  border: 1px solid var(--appForegroundSemiTransparent);
  background: repeating-linear-gradient(45deg, var(--appForegroundSemiTransparent) 0px, var(--appForegroundSemiTransparent) 1px, transparent 1px, transparent 10px);
  padding-left: calc(var(--defaultGap) - 4px);
  width: calc(100% - var(--bigGap)) + 4px;
  pointer-events: none;
  color: var(--appForeground);
  font-style: unset;
}

campaign.finished,
campaign.dirty,
set.finished,
set.dirty {
  box-shadow: var(--shadow), inset var(--shadow);
  border: 1px solid var(--appForeground);
  pointer-events: all;
}

campaign.passed,
set.passed {
  box-shadow: var(--shadow), inset var(--shadow);
  border: 1px solid var(--appForeground);
  pointer-events: all;
}

campaign h4,
campaign p,
set h4,
set p {
  margin: 0;
}

campaign h4,
set h4 {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: end;
  gap: 4px;
  width: 100%;
  font-weight: 200;
  line-height: 1.1em;
  text-align: left;
  text-shadow: var(--shadow);
}

campaign h4 name,
set h4 name {
  display: flex;
  justify-content: start;
  align-items: end;
  align-self: center;
  gap: 2px;
  width: 100%;
}

campaign h4 status,
set h4 status {
  display: flex;
  font-weight: 200;
  text-shadow: var(--shadowAlt);
  white-space: nowrap;
}

campaign h4 status {
  font-weight: bold;
}

/* campaign.finished h4 name,
set.finished h4 name,
campaign.locked h4 name,
set.locked h4 name {
  font-weight: 200;
} */

campaign.finished h4 status,
set.finished h4 status {
  font-weight: bold;
}

campaign p,
set p {
  font-weight: 400;
  font-size: 0.9em;
}

divider {
  /* display: none; */
  background-color: var(--dividerColor);
  width: 100%;
  height: 1px;
  min-height: 1px;
  max-height: 1px;
}

setting {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-content: flex-start;
  justify-content: space-between;
  width: 100%;
}

section.puck setting {
  column-gap: 12px;
  justify-content: center;
}

section h3 {
  margin-bottom: var(--defaultGap);
}

section.puck puck {
  width: 20px;
  height: 20px;
}


difficulty {
  display: flex;
  flex-basis: 20%;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  cursor: pointer;
  box-shadow: inset var(--shadow), var(--shadow);
  border: 1px solid var(--appForeground);
}

modal puck {
  display: flex;
  position: relative;
  flex-direction: column;
  align-content: center;
  justify-content: flex-end;
  align-items: center;
  opacity: 1;
  cursor: pointer;
  margin: 0 0 var(--defaultGap) 0;
  box-shadow: var(--shadow);
  width: 20px;
}

difficulty value {
  display: block;
  border-top: 1px solid var(--appForeground);
  padding: 4px 0px;
  width: 100%;
  color: var(--appForeground);
  font-family: var(--funfont);
  text-align: center;
  text-transform: lowercase;
}

difficulty.selected value {
  background-color: var(--appForeground);
  color: white;
}

input {
  border: 1px solid var(--appForeground);
  border-radius: 0px;
  background: hsla(var(--hue), var(--saturation), 100%, .2);
  padding: 13px 12px;
  max-width: 200px;
  font-size: 1em;
}

input:focus {
  outline: none;
  background: white;
  /* optional: removes default blue outline */
}

input::placeholder {
  opacity: 1;
  /* Firefox */
  color: var(--appForegroundSemiTransparent);
}

tinycontrols {
  display: flex;
  flex-direction: row;
  gap: 4px;
}

tinycontrols button {
  padding: 10px;
  font-size: 1em;
  line-height: 1em;
}

tinycontrols button.primary icon {
  background-color: hsl(var(--hue), 80%, 100%);
}

puckcolor {
  display: block;
  cursor: pointer;
  box-shadow: inset var(--shadow), var(--shadow);
  border: 1px solid var(--appForeground);
  padding: 10px;
  width: 80px;
  font-family: var(--funfont);
  text-align: center;
}

puckcolor.selected {
  background-color: var(--appForeground);
  color: white;
}

theme {
  display: flex;
  row-gap: 4px;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  box-shadow: inset var(--shadow), var(--shadow);
  border: 1px solid var(--appForeground);
  padding: 6px;
  width: 8%;
  font-family: var(--funfont);
}

theme.selected {
  background: var(--appForeground);
  color: white;
}

theme color {
  display: flex;
  justify-content: center;
  box-shadow: var(--shadow);
  border: 1px solid var(--appForeground);
  width: calc(100% - 2px);
  height: 40px;
}

theme.selected color {
  box-shadow: inset var(--shadow);
}

theme value {
  display: none;
}

target {
  display: flex;
  position: fixed;
  align-content: flex-start;
  justify-content: center;
  align-items: flex-start;
  transition: 150ms ease-out transform, height, width, background-color;
  border: 1px solid var(--appForeground);
  border-width: 1px 0px;
  background-image: repeating-radial-gradient(circle, hsla(var(--hue), var(--saturation), var(--oppositeLuminosity), 0), hsla(var(--hue), var(--saturation), var(--oppositeLuminosity), 0.2) 25px);
  background-position: var(--targetX);
  width: var(--stageWidth);
  max-width: 500px;
  color: var(--appForeground);
  text-align: center;
}

target.hide {
  opacity: 0;
}

.success target {
  background: var(--highlightColor);
}

.ended target {
  opacity: 0.2;
  border-color: hsla(var(--hue), var(--saturation), var(--oppositeLuminosity), 0);
}

.ended score {
  display: none;
}

target value {
  display: block;
  transform: translateY(calc(100% + 4px));
  transition: 0ms ease-out;
  transition-property: transform, opacity;
  height: 100%;
  font-weight: bold;
  font-family: var(--funfont);
  text-shadow: var(--shadowAlt);
}

.ended.success target value,
.success target value {
  transform: translateY(-150px) scale(1.4);
  opacity: 0;
  transition: 1000ms ease-in-out;
  transition-property: transform, opacity;
}

splat {
  display: flex;
  position: absolute;
  justify-content: center;
  align-items: center;
  transform: translate(0px, calc((var(--stageHeight) - 224px) / 2));
  transform-origin: bottom center;
  rotate: -5deg;
  scale: 1.3;
  opacity: 0;
  z-index: 2000;
  width: 100%;
  max-width: var(--maxWidth);
  height: 224px;
  max-height: var(--maxHeight);
  pointer-events: none;
}

splat icon {
  rotate: 6deg;
  opacity: .3;
  /* background: hsl(var(--hue), 60%, 100%); */
}

splat words {
  display: flex;
  position: absolute;
  justify-content: center;
  align-items: center;
  margin-bottom: 7px;
  width: 100px;
  font-weight: bold;
  font-size: 14px;
  line-height: 1em;
  font-family: var(--funfont);
  text-align: center;
  text-shadow: var(--shadowAlt);
}

splat.show {
  opacity: 1;
}

@keyframes splatmove {
  0% {
    opacity: 1;
  }

  2%,
  95% {
    opacity: 1;
  }

  100% {
    opacity: 1;
  }
}

info {
  display: flex;
  position: absolute;
  flex-direction: column;
  justify-content: start;
  align-items: center;
  z-index: 2;
  margin-bottom: env(safe-area-inset-bottom);
  width: var(--maxWidth);
  height: var(--stageHeight);
  min-height: var(--stageHeight);
  max-height: var(--stageHeight);
  pointer-events: none;
  color: hsl(var(--hue), var(--saturation), var(--oppositeLuminosity));
}

.ended info {
  justify-content: center;
}

info p {
  display: block;
  margin: 10px 0;
  line-height: 150%;
  text-align: center;
}

info.emphasize p {
  font-weight: bold;
  font-family: var(--funfont);
}

controls {
  display: flex;
  column-gap: var(--defaultGap);
  row-gap: 10px;
  justify-content: flex-end;
  margin: var(--defaultGap) 0px;
  padding-bottom: calc(var(--defaultGap) + calc(0.5 * env(safe-area-inset-bottom)));
  width: calc(100% - 2 * var(--bigGap));
  max-width: calc(var(--maxWidth) - 0px);
}

controls.endgame {
  flex-direction: column;
}

theater controls {
  justify-content: space-between;
  gap: 0;
  width: 100%;
}

.ended theater controls {
  justify-content: center;
}

button {
  justify-content: center;
  cursor: pointer;
  margin: 0px;
  box-shadow: var(--shadow);
  border: 1px solid var(--appForeground);
  background-color: var(--appForeground);
  padding: 12px 10px;
  width: 100%;
  color: white;
  font-weight: bold;
  font-size: 1.5em;
  font-family: var(--funfont);
  text-shadow: var(--shadow);
  text-transform: lowercase;
}

button span {
  display: block;
  color: var(--appBackground);
  font-weight: normal;
  font-size: 0.6em;
}

button.secondary,
button.tertiary {
  box-shadow: inset var(--shadow), var(--shadow);
  background: var(--appBackground);
  padding: 10px;
  color: var(--appForeground);
  font-weight: normal;
}

overlay button,
overlay button.secondary,
overlay button.tertiary {
  margin-top: 10px;
  box-shadow: unset;
  border-width: 0px;
  border-style: none;
  background: var(--highlightColor);
  padding: 4px 14px;
  width: auto;
  color: var(--appForegroundDark);
  font-weight: normal;
  font-size: 1em;
  text-shadow: unset;
}

button.tertiary {
  font-size: 1em;
}

button:active,
button:focus {
  transform: translateY(2px);
}

theater controls button {
  opacity: 1;
  margin: 0 var(--defaultGap);
  box-shadow: var(--shadow);
  border-radius: 50%;
  width: 80px;
  min-width: 80px;
  max-width: 80px;
  height: 80px;
  min-height: 80px;
  max-height: 80px;
  pointer-events: all;
  font-weight: normal;
  font-size: 1.25em;
}

theater controls button.hide {
  opacity: 0;
  pointer-events: none;
}

theater controls button.highlight {
  border-color: hsl(var(--hue), var(--saturation), 100%);
  background-color: hsl(var(--hue), var(--saturation), 100%);
  color: var(--appForeground);
}

overlay {
  justify-content: center;
  background: none;
}

overlay.meta {
  backdrop-filter: blur(2px);
  background: var(--appBackgroundSemiTransparent);
}

overlay instructions,
overlay announcement {
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: center;
  gap: 6px;
  box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.25);
  border-radius: 10px;
  background: var(--appForeground) linear-gradient(rgba(0, 0, 0, 0.5));
  padding: var(--defaultGap) calc(1.5 * var(--defaultGap));
  /* width: 100%; */
  max-width: calc(var(--maxWidth) - (2 * var(--bigGap)) - (1.5 * var(--defaultGap)));
  color: var(--highlightColor);
  font-weight: bold;
  line-height: 1.3em;
  font-family: var(--funfont);
  text-align: center;
  text-shadow: none;
}

overlay instructions span,
overlay announcement span {
  max-width: 300px;
  color: hsl(var(--hue), 80%, 100%);
  font-weight: 200;
  font-family: var(--mainFont);
}

b {
  font-weight: bold;
}

.blink {
  animation: 500ms ease-in-out 0s 0.5 blink;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

@keyframes blink {
  0% {
    opacity: 0.5;
  }

  100% {
    opacity: 1;
  }
}

.disabled,
:disabled {
  opacity: 0.2;
  pointer-events: none;
}

.browseronly {
  display: none;
}

confetti {
  display: block;
  position: absolute;
  width: var(--maxWidth);
  height: var(--maxHeight);
  pointer-events: none;
}

confetto,
canvas {
  display: block;
  position: fixed;
  top: -20px;
  transform: translate(0px -10px) rotate(0deg);
  opacity: 1;
  z-index: 3000;
  transition-property: transform, opacity;
  transition-timing-function: ease-in;
  background: var(--appForeground);
  width: 10px;
  height: 10px;
  pointer-events: none;
}

@media only screen and (max-width: 500px) {
  :root {
    --maxWidth: 100%;
  }

  body {
    background: var(--appBackground);
  }

  info {
    margin-top: var(--bigGap);
    max-width: var(--stageWidth);
  }

  modal {
    margin: auto;
  }

  app {
    border: none;
  }

  theater instructions {
    min-width: calc(100% - (2 * var(--bigGap)) - (1.5 * var(--defaultGap)));
    max-width: calc(100% - (2 * var(--bigGap)) - (1.5 * var(--defaultGap)));
  }
}

@media only screen and (max-width: 339px) {
  modal {
    justify-content: center;
    gap: var(--bigGap);
  }

  modal header,
  modal controls {
    display: none;
  }

  modal ohno {
    display: block;
    margin: 0px var(--bigGap);
    text-align: center;
  }

  modal ohno h3 {
    color: white;
    font-weight: bold;
    text-shadow: var(--whiteTextShadow);
  }
}

@media only screen and (max-height: 682px) {
  section h3 {
    display: none;
  }

  theater header button,
  modal header button {
    padding: 12px 14px 14px 14px;
    font-size: 1.1em;
  }

  theater controls p {
    font-size: 0.85em;
  }

  theater {
    gap: 0px;
  }

  overlay {
    justify-content: end;
  }

  overlay instructions,
  overlay announcement {
    margin-bottom: calc(1.75 * var(--hugeGap));
  }

  section {
    padding: var(--defaultGap);
  }

  divider {
    opacity: 0;
  }

  info {
    max-width: var(--stageWidth);
  }

  info stats {
    padding-top: 0px;
  }
}

@media (display-difficulty: standalone) {
  .browseronly {
    display: block;
  }
}